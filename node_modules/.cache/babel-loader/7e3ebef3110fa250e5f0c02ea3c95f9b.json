{"ast":null,"code":"var _jsxFileName = \"/Users/andrey/Desktop/111/react/marvel/src/components/charInfo/CharInfo.js\";\nimport { Component } from 'react';\nimport Skeleton from '../skeleton/Skeleton';\nimport Spinner from '../spinner/Spinner';\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './charInfo.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CharInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      char: null,\n      loading: false,\n      error: false\n    };\n    this.marvelService = new MarvelService();\n\n    this.updateChar = () => {\n      const {\n        charId\n      } = this.props;\n\n      if (!charId) {\n        return;\n      }\n\n      this.onCharLoading();\n      this.marvelService.getCharacter(charId).then(this.onCharLoaded).catch(this.onError);\n    };\n\n    this.onCharLoaded = char => {\n      this.setState({\n        char,\n        loading: false\n      });\n    };\n\n    this.onCharLoading = () => {\n      this.setState({\n        loading: true\n      });\n    };\n\n    this.onError = () => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updateChar();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.charId !== prevProps.charId) {\n      this.updateChar();\n    }\n  }\n\n  render() {\n    const {\n      char,\n      loading,\n      error\n    } = this.state;\n    const skeleton = error || loading || char ? null : /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 55\n    }, this);\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 31\n    }, this) : null;\n    const content = !(loading || error || !char) ? /*#__PURE__*/_jsxDEV(View, {\n      char: char\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 52\n    }, this) : null;\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 34\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__info\",\n      children: [skeleton, spinner, content, errorMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst View = ({\n  char\n}) => {\n  const {\n    name,\n    description,\n    thumbnail,\n    homepage,\n    wiki\n  } = char;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__basics\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: thumbnail,\n        alt: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__info-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: homepage,\n            className: \"button button__main\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"homepage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: wiki,\n            className: \"button button__secondary\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"Wiki\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__descr\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__comics\",\n      children: \"Comics:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__comics-list\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"char__comics-item\",\n        children: \"All-Winners Squad: Band of Heroes (2011) #3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = View;\nexport default CharInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["/Users/andrey/Desktop/111/react/marvel/src/components/charInfo/CharInfo.js"],"names":["Component","Skeleton","Spinner","MarvelService","ErrorMessage","CharInfo","state","char","loading","error","marvelService","updateChar","charId","props","onCharLoading","getCharacter","then","onCharLoaded","catch","onError","setState","componentDidMount","componentDidUpdate","prevProps","render","skeleton","spinner","content","errorMessage","View","name","description","thumbnail","homepage","wiki"],"mappings":"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","sourcesContent":["import { Component } from 'react';\n\nimport Skeleton from '../skeleton/Skeleton';\nimport Spinner from '../spinner/Spinner';\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n  state = {\n    char: null,\n    loading: false,\n    error: false\n  }\n\n  marvelService = new MarvelService();\n\n  componentDidMount() {\n    this.updateChar()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.charId !== prevProps.charId) {\n      this.updateChar();\n    }\n  }\n\n  updateChar = () => {\n    const {charId} = this.props;\n    if (!charId) {\n      return;\n    }\n    \n    this.onCharLoading()\n\n    this.marvelService\n      .getCharacter(charId)\n      .then(this.onCharLoaded)\n      .catch(this.onError);\n  }\n\n  onCharLoaded = (char) => {\n    this.setState({\n      char,\n      loading: false})\n  }\n\n  onCharLoading = () => {\n    this.setState({\n      loading: true\n    })\n  }\n\n  onError = () => {\n    this.setState({\n      loading: false,\n      error: true\n    })\n  }\n\n  render() {\n    const {char, loading, error} = this.state;\n    const skeleton = error || loading || char ? null: <Skeleton />;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n    const errorMessage = error ? <ErrorMessage /> : null;\n\n    return (\n      <div className=\"char__info\">\n        {skeleton}\n        {spinner}\n        {content}\n        {errorMessage}\n      </div>\n    )\n  }\n}\n\nconst View = ({char}) => {\n  const {name, description, thumbnail, homepage, wiki} = char;\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt={name}/>\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">\n        {description}\n      </div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        <li className=\"char__comics-item\">\n            All-Winners Squad: Band of Heroes (2011) #3\n        </li>\n      </ul>\n    </>\n  )\n}\n\nexport default CharInfo;"]},"metadata":{},"sourceType":"module"}