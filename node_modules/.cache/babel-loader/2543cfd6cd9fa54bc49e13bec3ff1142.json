{"ast":null,"code":"var _jsxFileName = \"/Users/andrey/Desktop/111/react/marvel/src/components/comicsList/ComicsList.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport './comicsList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ComicsList = () => {\n  _s();\n\n  const [comicsList, setComicsList] = useState([]);\n  const [newComicLoading, setNewComicLoading] = useState(false);\n  const [offset, setOffset] = useState(38664);\n  const [comicEnded, setComicEnded] = useState(false);\n  const {\n    loading,\n    error,\n    getAllComics\n  } = useMarvelService();\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewComicLoading(false) : setNewComicLoading(true);\n    getAllComics(offset).then(onComicsListLoaded);\n  };\n\n  const onComicsListLoaded = newComicsList => {\n    let ended = false;\n\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n\n    setComicsList(comicsList => [...comicsList, ...newComicsList]);\n    setNewComicLoading(false);\n    setOffset(offset => offset + 8);\n    setComicEnded(ended);\n  };\n\n  const renderComics = arr => {\n    const items = arr.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"comics__item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.thumbnail,\n            alt: item.title,\n            className: \"comics__item-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comics__item-name\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comics__item-price\",\n            children: item.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"comics__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  };\n\n  const items = renderComics(comicsList);\n  const spinner = loading && !newComicLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 49\n  }, this) : null;\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 32\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comics__list\",\n    children: [spinner, items, errorMessage, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button button__main button__long\",\n      disabled: newComicLoading,\n      onClick: () => onRequest(offset),\n      style: {\n        'display': comicEnded ? 'none' : 'block'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ComicsList, \"NE4toJ4cBF5/Qq6r4Rm7axlupw4=\", false, function () {\n  return [useMarvelService];\n});\n\n_c = ComicsList;\nexport default ComicsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComicsList\");","map":{"version":3,"sources":["/Users/andrey/Desktop/111/react/marvel/src/components/comicsList/ComicsList.js"],"names":["useEffect","useState","Spinner","ErrorMessage","useMarvelService","ComicsList","comicsList","setComicsList","newComicLoading","setNewComicLoading","offset","setOffset","comicEnded","setComicEnded","loading","error","getAllComics","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","renderComics","arr","items","map","item","thumbnail","title","price","id","spinner","errorMessage"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AAEA,OAAO,mBAAP;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAM;AAACa,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAiCZ,gBAAgB,EAAvD;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,SAAS,CAACP,MAAD,EAAS,IAAT,CAAT;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMO,SAAS,GAAG,CAACP,MAAD,EAASQ,OAAT,KAAqB;AACrCA,IAAAA,OAAO,GAAGT,kBAAkB,CAAC,KAAD,CAArB,GAA+BA,kBAAkB,CAAC,IAAD,CAAxD;AACAO,IAAAA,YAAY,CAACN,MAAD,CAAZ,CACGS,IADH,CACQC,kBADR;AAED,GAJD;;AAMA,QAAMA,kBAAkB,GAAIC,aAAD,IAAmB;AAC5C,QAAIC,KAAK,GAAG,KAAZ;;AACA,QAAGD,aAAa,CAACE,MAAd,GAAuB,CAA1B,EAA6B;AAC3BD,MAAAA,KAAK,GAAG,IAAR;AACD;;AAEDf,IAAAA,aAAa,CAACD,UAAU,IAAI,CAAC,GAAGA,UAAJ,EAAgB,GAAGe,aAAnB,CAAf,CAAb;AACAZ,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAE,IAAAA,SAAS,CAACD,MAAM,IAAIA,MAAM,GAAG,CAApB,CAAT;AACAG,IAAAA,aAAa,CAACS,KAAD,CAAb;AACD,GAVD;;AAYA,QAAME,YAAY,GAAIC,GAAD,IAAS;AAC5B,UAAMC,KAAK,GAAGD,GAAG,CAACE,GAAJ,CAAQC,IAAI,IAAI;AAE5B,0BACE;AAAkB,QAAA,SAAS,EAAC,cAA5B;AAAA,+BACE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAA,kCACE;AAAK,YAAA,GAAG,EAAEA,IAAI,CAACC,SAAf;AAA0B,YAAA,GAAG,EAAED,IAAI,CAACE,KAApC;AAA2C,YAAA,SAAS,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,sBAAoCF,IAAI,CAACE;AAAzC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,sBAAqCF,IAAI,CAACG;AAA1C;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAASH,IAAI,CAACI,EAAd;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAXa,CAAd;AAaA,wBACE;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA,gBACGN;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAnBD;;AAqBA,QAAMA,KAAK,GAAGF,YAAY,CAAClB,UAAD,CAA1B;AACA,QAAM2B,OAAO,GAAGnB,OAAO,IAAI,CAACN,eAAZ,gBAA8B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAA9B,GAA4C,IAA5D;AACA,QAAM0B,YAAY,GAAGnB,KAAK,gBAAG,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,UAAH,GAAsB,IAAhD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,eACGkB,OADH,EAEGP,KAFH,EAGGQ,YAHH,eAIE;AACE,MAAA,SAAS,EAAC,kCADZ;AAEE,MAAA,QAAQ,EAAE1B,eAFZ;AAGE,MAAA,OAAO,EAAE,MAAMS,SAAS,CAACP,MAAD,CAH1B;AAIE,MAAA,KAAK,EAAE;AAAC,mBAAWE,UAAU,GAAG,MAAH,GAAY;AAAlC,OAJT;AAAA,6BAKE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CArED;;GAAMP,U;UAMmCD,gB;;;KANnCC,U;AAuEN,eAAeA,UAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newComicLoading, setNewComicLoading] = useState(false);\n  const [offset, setOffset] = useState(38664);\n  const [comicEnded, setComicEnded] = useState(false);\n\n  const {loading, error, getAllComics} = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true)\n  }, [])\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewComicLoading(false) : setNewComicLoading(true)\n    getAllComics(offset)\n      .then(onComicsListLoaded)\n  }\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if(newComicsList.length < 8) {\n      ended = true;\n    }\n\n    setComicsList(comicsList => [...comicsList, ...newComicsList])\n    setNewComicLoading(false)\n    setOffset(offset => offset + 8)\n    setComicEnded(ended)\n  }\n\n  const renderComics = (arr) => {\n    const items = arr.map(item => {\n      \n      return(\n        <li key={item.id} className=\"comics__item\">\n          <a href=\"#\">\n            <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n            <div className=\"comics__item-name\">{item.title}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </a>\n        </li>  \n      )\n    })\n\n    return(\n      <ul className=\"comics__grid\">\n        {items}\n      </ul>\n    )\n  }\n\n  const items = renderComics(comicsList);\n  const spinner = loading && !newComicLoading ? <Spinner /> : null;\n  const errorMessage = error ? <ErrorMessage /> : null;\n\n  return (\n    <div className=\"comics__list\">\n      {spinner}\n      {items}\n      {errorMessage}\n      <button \n        className=\"button button__main button__long\"\n        disabled={newComicLoading}\n        onClick={() => onRequest(offset)}\n        style={{'display': comicEnded ? 'none' : 'block'}}>\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  )\n}\n\nexport default ComicsList;"]},"metadata":{},"sourceType":"module"}