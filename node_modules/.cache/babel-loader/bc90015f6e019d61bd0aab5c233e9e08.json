{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useHttp } from '../hooks/http.hook';\n\nfunction useMarvelService() {\n  _s();\n\n  const {\n    loading,\n    request,\n    error,\n    clearError\n  } = useHttp();\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  const _apiKey = 'apikey=e857b55234347cfb7f6425f75329ee7f';\n  const _baseOffset = 210;\n\n  const getAllCharacters = async (offset = _baseOffset) => {\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacter = async id => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  const _transformCharacter = char => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'Для этого персонажа нет описания',\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items\n    };\n  };\n\n  return {\n    loading,\n    error,\n    getAllCharacters,\n    getCharacter\n  };\n}\n\n_s(useMarvelService, \"9hyEhuOfcolEaHPbDIyQe2OeeLY=\", false, function () {\n  return [useHttp];\n});\n\nexport default useMarvelService;","map":{"version":3,"sources":["/Users/andrey/Desktop/111/react/marvel/src/services/MarvelService.js"],"names":["useHttp","useMarvelService","loading","request","error","clearError","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","url","wiki","comics","items"],"mappings":";;AAAA,SAAQA,OAAR,QAAsB,oBAAtB;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AAC1B,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA;AAA1B,MAAwCL,OAAO,EAArD;AAEA,QAAMM,QAAQ,GAAG,2CAAjB;AACA,QAAMC,OAAO,GAAG,yCAAhB;AACA,QAAMC,WAAW,GAAG,GAApB;;AAEA,QAAMC,gBAAgB,GAAG,OAAOC,MAAM,GAAGF,WAAhB,KAAgC;AACvD,UAAMG,GAAG,GAAG,MAAMR,OAAO,CAAE,GAAEG,QAAS,6BAA4BI,MAAO,IAAGH,OAAQ,EAA3D,CAAzB;AACA,WAAOI,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiBC,GAAjB,CAAqBC,mBAArB,CAAP;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAG,MAAOC,EAAP,IAAc;AACjC,UAAMN,GAAG,GAAG,MAAMR,OAAO,CAAE,GAAEG,QAAS,cAAaW,EAAG,IAAGV,OAAQ,EAAxC,CAAzB;AACA,WAAOQ,mBAAmB,CAACJ,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiB,CAAjB,CAAD,CAA1B;AACD,GAHD;;AAKA,QAAME,mBAAmB,GAAIG,IAAD,IAAU;AACpC,WAAO;AACLD,MAAAA,EAAE,EAAEC,IAAI,CAACD,EADJ;AAELE,MAAAA,IAAI,EAAED,IAAI,CAACC,IAFN;AAGLC,MAAAA,WAAW,EAAEF,IAAI,CAACE,WAAL,GAAoB,GAAEF,IAAI,CAACE,WAAL,CAAiBC,KAAjB,CAAuB,CAAvB,EAA0B,GAA1B,CAA+B,KAArD,GAA4D,kCAHpE;AAILC,MAAAA,SAAS,EAAEJ,IAAI,CAACI,SAAL,CAAeC,IAAf,GAAsB,GAAtB,GAA4BL,IAAI,CAACI,SAAL,CAAeE,SAJjD;AAKLC,MAAAA,QAAQ,EAAEP,IAAI,CAACQ,IAAL,CAAU,CAAV,EAAaC,GALlB;AAMLC,MAAAA,IAAI,EAAEV,IAAI,CAACQ,IAAL,CAAU,CAAV,EAAaC,GANd;AAOLE,MAAAA,MAAM,EAAEX,IAAI,CAACW,MAAL,CAAYC;AAPf,KAAP;AASD,GAVD;;AAYA,SAAO;AAAC5B,IAAAA,OAAD;AAAUE,IAAAA,KAAV;AAAiBK,IAAAA,gBAAjB;AAAmCO,IAAAA;AAAnC,GAAP;AACD;;GA9BQf,gB;UACuCD,O;;;AA+BhD,eAAeC,gBAAf","sourcesContent":["import {useHttp} from '../hooks/http.hook'\n\nfunction useMarvelService() {\n  const {loading, request, error, clearError} = useHttp()\n\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  const _apiKey = 'apikey=e857b55234347cfb7f6425f75329ee7f';\n  const _baseOffset = 210;\n\n  const getAllCharacters = async (offset = _baseOffset) => {\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  }\n\n  const getCharacter = async (id) => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n    return _transformCharacter(res.data.results[0]);\n  }\n\n  const _transformCharacter = (char) => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'Для этого персонажа нет описания',\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items\n    }\n  }\n\n  return {loading, error, getAllCharacters, getCharacter}\n}\n\nexport default useMarvelService;"]},"metadata":{},"sourceType":"module"}