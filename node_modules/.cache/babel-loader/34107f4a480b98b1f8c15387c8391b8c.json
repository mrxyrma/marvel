{"ast":null,"code":"var _jsxFileName = \"/Users/andrey/Desktop/111/react/marvel/src/components/charList/CharList.js\";\nimport { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './charList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CharList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      charList: [],\n      loading: true,\n      error: false\n    };\n    this.marvelService = new MarvelService();\n\n    this.onCharListLoaded = charList => {\n      this.setState({\n        charList,\n        loading: false\n      });\n    };\n\n    this.onError = () => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.marvelService.getAllCharacters().then(this.onCharListLoaded).catch(this.onError);\n  }\n\n  renderItems(arr) {\n    const items = arr.map(item => {\n      let imgStyle = {\n        'objectFit': 'cover'\n      };\n\n      if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {\n          'objectFit': 'unset'\n        };\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"char__item\",\n        onClick: () => this.props.takeSelectedId(item.id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.thumbnail,\n          alt: item.name,\n          style: imgStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__name\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    const {\n      charList,\n      loading,\n      error\n    } = this.state;\n    const items = this.renderItems(charList);\n    const spinner = this.state.loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 42\n    }, this) : null;\n    const errorMessage = this.state.error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 45\n    }, this) : null;\n    const content = !(loading || error) ? items : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__list\",\n      children: [spinner, errorMessage, content, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button__main button__long\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: \"load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CharList;","map":{"version":3,"sources":["/Users/andrey/Desktop/111/react/marvel/src/components/charList/CharList.js"],"names":["Component","MarvelService","Spinner","ErrorMessage","CharList","state","charList","loading","error","marvelService","onCharListLoaded","setState","onError","componentDidMount","getAllCharacters","then","catch","renderItems","arr","items","map","item","imgStyle","thumbnail","props","takeSelectedId","id","name","render","spinner","errorMessage","content"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,OAAO,iBAAP;;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BK,KAD+B,GACvB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,OAAO,EAAE,IAFH;AAGNC,MAAAA,KAAK,EAAE;AAHD,KADuB;AAAA,SAO/BC,aAP+B,GAOf,IAAIR,aAAJ,EAPe;;AAAA,SAgB/BS,gBAhB+B,GAgBXJ,QAAD,IAAc;AAC/B,WAAKK,QAAL,CAAc;AACZL,QAAAA,QADY;AAEZC,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KArB8B;;AAAA,SAuB/BK,OAvB+B,GAuBrB,MAAM;AACd,WAAKD,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE,IADK;AAEZD,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KA5B8B;AAAA;;AAS/BM,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,aAAL,CACGK,gBADH,GAEGC,IAFH,CAEQ,KAAKL,gBAFb,EAGGM,KAHH,CAGS,KAAKJ,OAHd;AAIA;;AAgBFK,EAAAA,WAAW,CAACC,GAAD,EAAM;AACf,UAAMC,KAAK,GAAGD,GAAG,CAACE,GAAJ,CAAQC,IAAI,IAAI;AAC5B,UAAIC,QAAQ,GAAG;AAAC,qBAAa;AAAd,OAAf;;AACA,UAAID,IAAI,CAACE,SAAL,KAAmB,qEAAvB,EAA8F;AAC5FD,QAAAA,QAAQ,GAAG;AAAC,uBAAa;AAAd,SAAX;AACD;;AAED,0BACE;AACE,QAAA,SAAS,EAAC,YADZ;AAGE,QAAA,OAAO,EAAE,MAAM,KAAKE,KAAL,CAAWC,cAAX,CAA0BJ,IAAI,CAACK,EAA/B,CAHjB;AAAA,gCAII;AAAK,UAAA,GAAG,EAAEL,IAAI,CAACE,SAAf;AAA0B,UAAA,GAAG,EAAEF,IAAI,CAACM,IAApC;AAA0C,UAAA,KAAK,EAAEL;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBAA6BD,IAAI,CAACM;AAAlC;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA,SAEON,IAAI,CAACK,EAFZ;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAfa,CAAd;AAiBA,wBACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBACKP;AADL;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAEDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAACtB,MAAAA,QAAD;AAAWC,MAAAA,OAAX;AAAoBC,MAAAA;AAApB,QAA6B,KAAKH,KAAxC;AAEA,UAAMc,KAAK,GAAG,KAAKF,WAAL,CAAiBX,QAAjB,CAAd;AAEA,UAAMuB,OAAO,GAAG,KAAKxB,KAAL,CAAWE,OAAX,gBAAqB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAArB,GAAmC,IAAnD;AACA,UAAMuB,YAAY,GAAG,KAAKzB,KAAL,CAAWG,KAAX,gBAAmB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAAnB,GAAsC,IAA3D;AACA,UAAMuB,OAAO,GAAG,EAAExB,OAAO,IAAIC,KAAb,IAAsBW,KAAtB,GAA8B,IAA9C;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,iBACKU,OADL,EAEKC,YAFL,EAGKC,OAHL,eAIE;AAAQ,QAAA,SAAS,EAAC,kCAAlB;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA1E8B;;AA6EjC,eAAe3B,QAAf","sourcesContent":["import { Component } from 'react';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n  state = {\n    charList: [],\n    loading: true,\n    error: false\n  }\n  \n  marvelService = new MarvelService();\n\n  componentDidMount() {\n    this.marvelService\n      .getAllCharacters()\n      .then(this.onCharListLoaded)\n      .catch(this.onError)\n   }\n  \n  onCharListLoaded = (charList) => {\n    this.setState({\n      charList,\n      loading: false\n    }) \n  }\n\n  onError = () => {\n    this.setState({\n      error: true,\n      loading: false\n    })\n  }\n\n  renderItems(arr) {\n    const items = arr.map(item => {\n      let imgStyle = {'objectFit': 'cover'};\n      if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit': 'unset'};\n      }\n\n      return(\n        <li \n          className=\"char__item\"\n          key={item.id}\n          onClick={() => this.props.takeSelectedId(item.id)}>\n            <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n            <div className=\"char__name\">{item.name}</div>\n        </li>\n      )\n    });\n\n    return (\n      <ul className=\"char__grid\">\n          {items}\n      </ul>\n    )\n  }\n\n  render() {\n    const {charList, loading, error} = this.state;\n\n    const items = this.renderItems(charList);\n\n    const spinner = this.state.loading ? <Spinner /> : null;\n    const errorMessage = this.state.error ? <ErrorMessage /> : null;\n    const content = !(loading || error) ? items : null;\n\n    return (\n      <div className=\"char__list\">\n          {spinner}\n          {errorMessage}\n          {content}\n        <button className=\"button button__main button__long\">\n          <div className=\"inner\">load more</div>\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default CharList;"]},"metadata":{},"sourceType":"module"}