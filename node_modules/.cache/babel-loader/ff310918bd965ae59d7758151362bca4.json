{"ast":null,"code":"var _jsxFileName = \"/Users/andrey/Desktop/111/react/marvel/src/components/pages/SingleComicPage.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './singleComicPage.scss';\nimport xMen from '../../resources/img/x-men.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SingleComicPage = () => {\n  _s();\n\n  const {\n    comicId\n  } = useParams();\n  const [comic, setComic] = useState(null);\n  const {\n    loading,\n    error,\n    getComic,\n    clearError\n  } = useMarvelService();\n  useEffect(() => {\n    updateComic();\n  }, [comicId]);\n\n  const updateComic = () => {\n    clearError();\n    getComic(comicId).then(onComicLoaded);\n  };\n\n  const onComicLoaded = comic => {\n    setComic(comic);\n  };\n\n  const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 29\n  }, this) : null;\n  const content = !(loading || error || !comic) ? /*#__PURE__*/_jsxDEV(View, {\n    comic: comic\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 51\n  }, this) : null;\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 32\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [spinner, content, errorMessage]\n  }, void 0, true);\n};\n\n_s(SingleComicPage, \"HJHxJHKBG33Yho+xNQ7hs220yMo=\", false, function () {\n  return [useParams, useMarvelService];\n});\n\n_c = SingleComicPage;\n\nconst View = ({\n  comic\n}) => {\n  const {\n    title,\n    description,\n    pageCount,\n    thumbnail,\n    language,\n    price\n  } = comic;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-comic\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: thumbnail,\n      alt: title,\n      className: \"single-comic__img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"single-comic__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"single-comic__name\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"single-comic__descr\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"single-comic__descr\",\n        children: pageCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"single-comic__descr\",\n        children: [\"Language: \", language]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-comic__price\",\n        children: price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/comics\",\n      className: \"single-comic__back\",\n      children: \"Back to all\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = View;\nexport default SingleComicPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SingleComicPage\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"sources":["/Users/andrey/Desktop/111/react/marvel/src/components/pages/SingleComicPage.js"],"names":["useParams","Link","useState","useEffect","Spinner","useMarvelService","ErrorMessage","xMen","SingleComicPage","comicId","comic","setComic","loading","error","getComic","clearError","updateComic","then","onComicLoaded","spinner","content","errorMessage","View","title","description","pageCount","thumbnail","language","price"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,OAAO,wBAAP;AACA,OAAOC,IAAP,MAAiB,+BAAjB;;;;AAGA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM;AAACC,IAAAA;AAAD,MAAYT,SAAS,EAA3B;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAACU,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA;AAA3B,MAA0CV,gBAAgB,EAAhE;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACP,OAAD,CAFM,CAAT;;AAIA,QAAMO,WAAW,GAAG,MAAM;AACxBD,IAAAA,UAAU;AAEVD,IAAAA,QAAQ,CAACL,OAAD,CAAR,CACGQ,IADH,CACQC,aADR;AAED,GALD;;AAOA,QAAMA,aAAa,GAAIR,KAAD,IAAW;AAC/BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMS,OAAO,GAAGP,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAH,GAAiB,IAAxC;AACA,QAAMQ,OAAO,GAAG,EAAER,OAAO,IAAIC,KAAX,IAAoB,CAACH,KAAvB,iBAAgC,QAAC,IAAD;AAAM,IAAA,KAAK,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA,UAAhC,GAAwD,IAAxE;AACA,QAAMW,YAAY,GAAGR,KAAK,gBAAG,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,UAAH,GAAsB,IAAhD;AAEE,sBACE;AAAA,eACGM,OADH,EAEGC,OAFH,EAGGC,YAHH;AAAA,kBADF;AAOD,CA/BH;;GAAMb,e;UACcR,S,EAE8BK,gB;;;KAH5CG,e;;AAgCF,MAAMc,IAAI,GAAG,CAAC;AAACZ,EAAAA;AAAD,CAAD,KAAa;AACxB,QAAM;AAACa,IAAAA,KAAD;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA,SAArB;AAAgCC,IAAAA,SAAhC;AAA2CC,IAAAA,QAA3C;AAAqDC,IAAAA;AAArD,MAA8DlB,KAApE;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEgB,SAAV;AAAqB,MAAA,GAAG,EAAEH,KAA1B;AAAiC,MAAA,SAAS,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA,kBAAoCA;AAApC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA,kBAAoCC;AAApC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA,kBAAoCC;AAApC;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA,iCAA8CE,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,kBAAsCC;AAAtC;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eASE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,SAAT;AAAmB,MAAA,SAAS,EAAC,oBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAfD;;MAAMN,I;AAiBV,eAAed,eAAf","sourcesContent":["import { useParams, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport Spinner from '../spinner/Spinner';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './singleComicPage.scss';\nimport xMen from '../../resources/img/x-men.png';\n\n\nconst SingleComicPage = () => {\n  const {comicId} = useParams();\n  const [comic, setComic] = useState(null);\n  const {loading, error, getComic, clearError}  = useMarvelService();\n\n  useEffect(() => {\n    updateComic()\n  }, [comicId])\n\n  const updateComic = () => {\n    clearError()\n\n    getComic(comicId)\n      .then(onComicLoaded)\n  }\n\n  const onComicLoaded = (comic) => {\n    setComic(comic)\n  }\n\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !comic) ? <View comic={comic}/> : null;\n  const errorMessage = error ? <ErrorMessage /> : null;\n\n    return (\n      <>\n        {spinner}\n        {content}\n        {errorMessage}\n      </>\n    )\n  }\n    const View = ({comic}) => {\n      const {title, description, pageCount, thumbnail, language, price} = comic\n      return(\n        <div className=\"single-comic\">\n          <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\n          <div className=\"single-comic__info\">\n            <h2 className=\"single-comic__name\">{title}</h2>\n            <p className=\"single-comic__descr\">{description}</p>\n            <p className=\"single-comic__descr\">{pageCount}</p>\n            <p className=\"single-comic__descr\">Language: {language}</p>\n            <div className=\"single-comic__price\">{price}</div>\n          </div>\n          <Link to='/comics' className=\"single-comic__back\">Back to all</Link>\n        </div>\n      )\n    }\n\nexport default SingleComicPage;"]},"metadata":{},"sourceType":"module"}