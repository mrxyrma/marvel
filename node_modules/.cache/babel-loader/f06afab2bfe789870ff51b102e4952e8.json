{"ast":null,"code":"var _jsxFileName = \"/Users/andrey/Desktop/111/react/marvel/src/components/charInfo/CharInfo.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Skeleton from '../skeleton/Skeleton';\nimport Spinner from '../spinner/Spinner';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './charInfo.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CharInfo(props) {\n  _s();\n\n  const [char, setChar] = useState(null);\n  const {\n    loading,\n    error,\n    getCharacter,\n    clearError\n  } = useMarvelService();\n  useEffect(() => {\n    updateChar();\n  }, [props.charId]);\n\n  const updateChar = () => {\n    clearError();\n    const {\n      charId\n    } = props;\n\n    if (!charId) {\n      return;\n    }\n\n    getCharacter(charId).then(onCharLoaded);\n  };\n\n  const onCharLoaded = char => {\n    setChar(char);\n  };\n\n  const skeleton = error || loading || char ? null : /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 53\n  }, this);\n  const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 29\n  }, this) : null;\n  const content = !(loading || error || !char) ? /*#__PURE__*/_jsxDEV(View, {\n    char: char\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 50\n  }, this) : null;\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 32\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__info\",\n    children: [skeleton, spinner, content, errorMessage]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CharInfo, \"fo4yMk3gnyKtV8rawMz5WHoIZlA=\", false, function () {\n  return [useMarvelService];\n});\n\n_c = CharInfo;\n\nconst View = ({\n  char\n}) => {\n  const {\n    name,\n    description,\n    thumbnail,\n    homepage,\n    wiki,\n    comics\n  } = char;\n  let imgStyle = {\n    'objectFit': 'cover'\n  };\n\n  if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n    imgStyle = {\n      'objectFit': 'unset'\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__basics\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: thumbnail,\n        alt: name,\n        style: imgStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__info-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: homepage,\n            className: \"button button__main\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"homepage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: wiki,\n            className: \"button button__secondary\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"Wiki\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__descr\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__comics\",\n      children: \"Comics:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__comics-list\",\n      children: comics.length ? comics.map((item, index) => {\n        if (index < 10) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"char__comics-item\",\n            children: item.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this);\n        }\n      }) : 'Для этого персонажа комиксы не найдены'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = View;\nexport default CharInfo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CharInfo\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"sources":["/Users/andrey/Desktop/111/react/marvel/src/components/charInfo/CharInfo.js"],"names":["useState","useEffect","Skeleton","Spinner","useMarvelService","ErrorMessage","CharInfo","props","char","setChar","loading","error","getCharacter","clearError","updateChar","charId","then","onCharLoaded","skeleton","spinner","content","errorMessage","View","name","description","thumbnail","homepage","wiki","comics","imgStyle","length","map","item","index"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\n\nimport Skeleton from '../skeleton/Skeleton';\nimport Spinner from '../spinner/Spinner';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charInfo.scss';\n\nfunction CharInfo(props) {\n  const [char, setChar] = useState(null)\n\n  const {loading, error, getCharacter, clearError}  = useMarvelService()\n\n  useEffect(() => {\n    updateChar()\n  }, [props.charId])\n\n  const updateChar = () => {\n    clearError()\n    const {charId} = props;\n    if (!charId) {\n      return\n    }\n\n    getCharacter(charId)\n      .then(onCharLoaded)\n  }\n\n  const onCharLoaded = (char) => {\n    setChar(char)\n  }\n\n  const skeleton = error || loading || char ? null: <Skeleton />;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View char={char}/> : null;\n  const errorMessage = error ? <ErrorMessage /> : null;\n\n  return (\n    <div className=\"char__info\">\n      {skeleton}\n      {spinner}\n      {content}\n      {errorMessage}\n    </div>\n  )\n}\n\nconst View = ({char}) => {\n  const {name, description, thumbnail, homepage, wiki, comics} = char;\n  let imgStyle = {'objectFit': 'cover'};\n      if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit': 'unset'};\n      }\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt={name} style={imgStyle}/>\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">\n        {description}\n      </div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {\n          comics.length ? \n          comics.map((item, index) => {\n            if (index < 10) {\n              return(\n                <li key={index} className=\"char__comics-item\">\n                  {item.name}\n                </li>\n              )\n            } \n          }) :\n          'Для этого персонажа комиксы не найдены'\n        }\n      </ul>\n    </>\n  )\n}\n\nexport default CharInfo;"]},"metadata":{},"sourceType":"module"}