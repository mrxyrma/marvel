{"ast":null,"code":"class MarvelService {\n  constructor() {\n    this.getResource = async url => {\n      let res = await fetch(url);\n\n      if (!res.ok) {\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n      }\n\n      return await res.json();\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/andrey/Desktop/111/react/marvel/src/services/MarvelService.js"],"names":["MarvelService","getResource","url","res","fetch","ok","Error","status","json"],"mappings":"AAEA,MAAMA,aAAN,CAAoB;AAAA;AAAA,SAClBC,WADkB,GACJ,MAAOC,GAAP,IAAe;AAC3B,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAArB;;AAEA,UAAI,CAACC,GAAG,CAACE,EAAT,EAAa;AACX,cAAM,IAAIC,KAAJ,CAAW,mBAAkBJ,GAAI,aAAYC,GAAG,CAACI,MAAO,EAAxD,CAAN;AACD;;AACD,aAAO,MAAMJ,GAAG,CAACK,IAAJ,EAAb;AACD,KARiB;AAAA;;AAAA","sourcesContent":["\n\nclass MarvelService {\n  getResource = async (url) => {\n    let res = await fetch(url);\n\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n    }\n    return await res.json();\n  }\n}"]},"metadata":{},"sourceType":"module"}