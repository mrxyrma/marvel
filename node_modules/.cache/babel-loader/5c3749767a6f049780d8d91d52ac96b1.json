{"ast":null,"code":"var _jsxFileName = \"/Users/andrey/Desktop/111/react/marvel/src/components/charList/CharList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './charList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CharList() {\n  _s();\n\n  const [charList, setCharList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n  const marvelService = new MarvelService();\n  useEffect(() => {\n    onRequest();\n  }, []);\n\n  const onRequest = offset => {\n    onCharListLoading();\n    marvelService.getAllCharacters(offset).then(onCharListLoaded).catch(onError);\n  };\n\n  const onCharListLoading = () => {\n    setNewItemLoading(true);\n  };\n\n  const onCharListLoaded = newCharList => {\n    let ended = false;\n\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n\n    setCharList(charList => [...charList, ...newCharList]);\n    setLoading(false);\n    setNewItemLoading(false);\n    setOffset(offset => offset + 9);\n    setCharEnded(ended);\n  };\n\n  const onError = () => {\n    setError(true);\n    setLoading(false);\n  };\n\n  const renderItems = arr => {\n    const items = arr.map(item => {\n      let imgStyle = {\n        'objectFit': 'cover'\n      };\n\n      if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {\n          'objectFit': 'unset'\n        };\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"char__item\",\n        onClick: () => props.onCharSelected(item.id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.thumbnail,\n          alt: item.name,\n          style: imgStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__name\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  };\n\n  const items = renderItems(charList);\n  const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 29\n  }, this) : null;\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 32\n  }, this) : null;\n  const content = !(loading || error) ? items : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__list\",\n    children: [spinner, errorMessage, content, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button button__main button__long\",\n      disabled: newItemLoading,\n      style: {\n        'display': charEnded ? 'none' : 'block'\n      },\n      onClick: () => this.onRequest(offset),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CharList, \"CX5em6hVOJM43ZarIvhwSZ60CjA=\");\n\n_c = CharList;\nexport default CharList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharList\");","map":{"version":3,"sources":["/Users/andrey/Desktop/111/react/marvel/src/components/charList/CharList.js"],"names":["useState","useEffect","useRef","MarvelService","Spinner","ErrorMessage","CharList","charList","setCharList","loading","setLoading","error","setError","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","marvelService","onRequest","onCharListLoading","getAllCharacters","then","onCharListLoaded","catch","onError","newCharList","ended","length","renderItems","arr","items","map","item","imgStyle","thumbnail","props","onCharSelected","id","name","spinner","errorMessage","content"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nfunction CharList() {\n  const [charList, setCharList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n  \n  const marvelService = new MarvelService();\n\n  useEffect(() => {\n    onRequest();\n  }, []);\n\n  const onRequest = (offset) => {\n    onCharListLoading();\n    marvelService\n      .getAllCharacters(offset)\n      .then(onCharListLoaded)\n      .catch(onError)\n  }\n  \n  const onCharListLoading = () => {\n    setNewItemLoading(true);\n  }\n\n  const onCharListLoaded = (newCharList) => {\n    let ended = false;\n    if(newCharList.length < 9) {\n      ended = true;\n    }\n\n    setCharList(charList => [...charList, ...newCharList])\n    setLoading(false)\n    setNewItemLoading(false)\n    setOffset(offset => offset + 9)\n    setCharEnded(ended)\n  }\n\n  const onError = () => {\n    setError(true)\n    setLoading(false)\n  }\n\n  const renderItems = (arr) => {\n    const items = arr.map(item => {\n      let imgStyle = {'objectFit': 'cover'};\n      if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit': 'unset'};\n      }\n\n      return(\n        <li \n          className=\"char__item\"\n          key={item.id}\n          onClick={() => props.onCharSelected(item.id)}>\n            <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n            <div className=\"char__name\">{item.name}</div>\n        </li>\n      )\n    });\n\n    return (\n      <ul className=\"char__grid\">\n        {items}\n      </ul>\n    )\n  }\n\n  const items = renderItems(charList);\n\n  const spinner = loading ? <Spinner /> : null;\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const content = !(loading || error) ? items : null;\n\n  return (\n    <div className=\"char__list\">\n      {spinner}\n      {errorMessage}\n      {content}\n      <button \n        className=\"button button__main button__long\"\n        disabled={newItemLoading}\n        style={{'display': charEnded ? 'none' : 'block'}}\n        onClick={() => this.onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  )\n}\n\nexport default CharList;"]},"metadata":{},"sourceType":"module"}