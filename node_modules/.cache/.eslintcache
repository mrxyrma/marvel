[{"/Users/andrey/Desktop/111/react/marvel/src/index.js":"1","/Users/andrey/Desktop/111/react/marvel/src/components/app/App.js":"2","/Users/andrey/Desktop/111/react/marvel/src/components/appHeader/AppHeader.js":"3","/Users/andrey/Desktop/111/react/marvel/src/components/randomChar/RandomChar.js":"4","/Users/andrey/Desktop/111/react/marvel/src/components/charList/CharList.js":"5","/Users/andrey/Desktop/111/react/marvel/src/components/charInfo/CharInfo.js":"6","/Users/andrey/Desktop/111/react/marvel/src/services/MarvelService.js":"7","/Users/andrey/Desktop/111/react/marvel/src/components/spinner/Spinner.js":"8","/Users/andrey/Desktop/111/react/marvel/src/components/errorMessage/ErrorMessage.js":"9","/Users/andrey/Desktop/111/react/marvel/src/components/skeleton/Skeleton.js":"10","/Users/andrey/Desktop/111/react/marvel/src/components/errorBoundary/ErrorBoundary.js":"11","/Users/andrey/Desktop/111/react/marvel/src/hooks/http.hook.js":"12","/Users/andrey/Desktop/111/react/marvel/src/components/appBanner/AppBanner.js":"13","/Users/andrey/Desktop/111/react/marvel/src/components/comicsList/ComicsList.js":"14","/Users/andrey/Desktop/111/react/marvel/src/components/pages/MainPage.js":"15","/Users/andrey/Desktop/111/react/marvel/src/components/pages/ComicsPage.js":"16","/Users/andrey/Desktop/111/react/marvel/src/components/pages/SingleComicPage.js":"17"},{"size":243,"mtime":1679236982078,"results":"18","hashOfConfig":"19"},{"size":676,"mtime":1686594905505,"results":"20","hashOfConfig":"19"},{"size":839,"mtime":1686582772524,"results":"21","hashOfConfig":"19"},{"size":2464,"mtime":1685539615246,"results":"22","hashOfConfig":"19"},{"size":2847,"mtime":1685540411057,"results":"23","hashOfConfig":"19"},{"size":2504,"mtime":1685540873350,"results":"24","hashOfConfig":"19"},{"size":2092,"mtime":1686601218330,"results":"25","hashOfConfig":"19"},{"size":4311,"mtime":1679234729777,"results":"26","hashOfConfig":"19"},{"size":258,"mtime":1679332215252,"results":"27","hashOfConfig":"19"},{"size":666,"mtime":1629627051000,"results":"28","hashOfConfig":"19"},{"size":433,"mtime":1685452731436,"results":"29","hashOfConfig":"19"},{"size":810,"mtime":1685563628218,"results":"30","hashOfConfig":"19"},{"size":522,"mtime":1629627299000,"results":"31","hashOfConfig":"19"},{"size":2228,"mtime":1686594533097,"results":"32","hashOfConfig":"19"},{"size":876,"mtime":1686582674474,"results":"33","hashOfConfig":"19"},{"size":220,"mtime":1686582457320,"results":"34","hashOfConfig":"19"},{"size":1745,"mtime":1686601478936,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1nud9c6",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/andrey/Desktop/111/react/marvel/src/index.js",[],["74","75"],"/Users/andrey/Desktop/111/react/marvel/src/components/app/App.js",[],"/Users/andrey/Desktop/111/react/marvel/src/components/appHeader/AppHeader.js",[],"/Users/andrey/Desktop/111/react/marvel/src/components/randomChar/RandomChar.js",["76"],"import { useState, useEffect } from 'react';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport './randomChar.scss';\n\nfunction RandomChar() {\n  const [char, setChar] = useState(null);\n  const {loading, error, getCharacter, clearError} = useMarvelService();\n  \n  useEffect(() => {\n    updateChar();\n  }, [])\n\n  const onCharLoaded = (char) => {\n    setChar(char)\n  }\n\n  const updateChar = () => {\n    clearError();\n    const id = Math.floor(Math.random()*(1011400 - 1011000)) + 1011000;\n    getCharacter(id)\n      .then(onCharLoaded);\n  }\n\n  const errorMessage = error ? <ErrorMessage/> : null;\n  const spinner = loading ? <Spinner/> : null;\n  const content = !(loading || error || !char) ? <View char={char}/> : null;\n  \n  return (\n    <div className=\"randomchar\">\n      {errorMessage}\n      {spinner}\n      {content}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!<br/>\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">\n          Or choose another one\n        </p>\n        <button \n          className=\"button button__main\"\n          onClick={updateChar}>\n          <div className=\"inner\">try it</div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n      </div>\n    </div>\n  )\n}\n\nconst View = ({char}) => {\n  const {name, description, thumbnail, homepage, wiki} = char;\n  const defaultImage = 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg';\n\n  return(\n    <div className=\"randomchar__block\">\n      <img \n        src={thumbnail} \n        style={thumbnail===defaultImage ? {objectFit: 'contain'} : null} alt=\"Random character\" \n        className=\"randomchar__img\"\n      />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default RandomChar;","/Users/andrey/Desktop/111/react/marvel/src/components/charList/CharList.js",["77"],"import { useState, useEffect, useRef } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nfunction CharList({onCharSelected}) {\n  const [charList, setCharList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n  \n  const {loading, error, getAllCharacters} = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true)\n    getAllCharacters(offset)\n      .then(onCharListLoaded)\n  }\n\n  const onCharListLoaded = (newCharList) => {\n    let ended = false;\n    if(newCharList.length < 9) {\n      ended = true;\n    }\n\n    setCharList(charList => [...charList, ...newCharList])\n    setNewItemLoading(false)\n    setOffset(offset => offset + 9)\n    setCharEnded(ended)\n  }\n\n  const itemRefs = useRef([])\n\n  const focusOnItem = (id) => {\n    itemRefs.current.forEach(item => item.classList.remove('char__item_selected'))\n    itemRefs.current[id].classList.add('char__item_selected')\n    itemRefs.current[id].focus()\n  }\n\n  const renderItems = (arr) => {\n    const items = arr.map((item, i) => {\n      let imgStyle = {'objectFit': 'cover'};\n      if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit': 'unset'};\n      }\n\n      return(\n        <li \n          className=\"char__item\"\n          tabIndex={0}\n          ref={el => itemRefs.current[i] = el}\n          key={item.id}\n          onClick={() => {\n            onCharSelected(item.id)\n            focusOnItem(i)}\n          }\n          onKeyPress={e => {\n            if (e.key === '' || e.key === 'Enter') {\n              onCharSelected(item.id)\n              focusOnItem(i)\n            }\n          }}>\n            <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n            <div className=\"char__name\">{item.name}</div>\n        </li>\n      )\n    });\n\n    return (\n      <ul className=\"char__grid\">\n        {items}\n      </ul>\n    )\n  }\n\n  const items = renderItems(charList);\n\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n  const errorMessage = error ? <ErrorMessage /> : null;\n\n  return (\n    <div className=\"char__list\">\n      {spinner}\n      {errorMessage}\n      {items}\n      <button \n        className=\"button button__main button__long\"\n        disabled={newItemLoading}\n        style={{'display': charEnded ? 'none' : 'block'}}\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  )\n}\n\nexport default CharList;","/Users/andrey/Desktop/111/react/marvel/src/components/charInfo/CharInfo.js",["78","79"],"import { useState, useEffect } from 'react';\n\nimport Skeleton from '../skeleton/Skeleton';\nimport Spinner from '../spinner/Spinner';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charInfo.scss';\n\nfunction CharInfo(props) {\n  const [char, setChar] = useState(null)\n\n  const {loading, error, getCharacter, clearError}  = useMarvelService()\n\n  useEffect(() => {\n    updateChar()\n  }, [props.charId])\n\n  const updateChar = () => {\n    clearError()\n    const {charId} = props;\n    if (!charId) {\n      return\n    }\n\n    getCharacter(charId)\n      .then(onCharLoaded)\n  }\n\n  const onCharLoaded = (char) => {\n    setChar(char)\n  }\n\n  const skeleton = error || loading || char ? null: <Skeleton />;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View char={char}/> : null;\n  const errorMessage = error ? <ErrorMessage /> : null;\n\n  return (\n    <div className=\"char__info\">\n      {skeleton}\n      {spinner}\n      {content}\n      {errorMessage}\n    </div>\n  )\n}\n\nconst View = ({char}) => {\n  const {name, description, thumbnail, homepage, wiki, comics} = char;\n  let imgStyle = {'objectFit': 'cover'};\n      if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit': 'unset'};\n      }\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt={name} style={imgStyle}/>\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">\n        {description}\n      </div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {\n          comics.length ? \n          comics.map((item, index) => {\n            if (index < 10) {\n              return(\n                <li key={index} className=\"char__comics-item\">\n                  {item.name}\n                </li>\n              )\n            } \n          }) :\n          'Для этого персонажа комиксы не найдены'\n        }\n      </ul>\n    </>\n  )\n}\n\nexport default CharInfo;","/Users/andrey/Desktop/111/react/marvel/src/services/MarvelService.js",[],"/Users/andrey/Desktop/111/react/marvel/src/components/spinner/Spinner.js",[],"/Users/andrey/Desktop/111/react/marvel/src/components/errorMessage/ErrorMessage.js",[],"/Users/andrey/Desktop/111/react/marvel/src/components/skeleton/Skeleton.js",[],"/Users/andrey/Desktop/111/react/marvel/src/components/errorBoundary/ErrorBoundary.js",[],"/Users/andrey/Desktop/111/react/marvel/src/hooks/http.hook.js",[],"/Users/andrey/Desktop/111/react/marvel/src/components/appBanner/AppBanner.js",[],"/Users/andrey/Desktop/111/react/marvel/src/components/comicsList/ComicsList.js",["80"],"/Users/andrey/Desktop/111/react/marvel/src/components/pages/MainPage.js",[],"/Users/andrey/Desktop/111/react/marvel/src/components/pages/ComicsPage.js",[],"/Users/andrey/Desktop/111/react/marvel/src/components/pages/SingleComicPage.js",["81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":16,"column":6,"nodeType":"88","endLine":16,"endColumn":8,"suggestions":"89"},{"ruleId":"86","severity":1,"message":"90","line":19,"column":6,"nodeType":"88","endLine":19,"endColumn":8,"suggestions":"91"},{"ruleId":"86","severity":1,"message":"87","line":17,"column":6,"nodeType":"88","endLine":17,"endColumn":20,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":79,"column":36,"nodeType":"95","messageId":"96","endLine":79,"endColumn":38},{"ruleId":"86","severity":1,"message":"90","line":20,"column":6,"nodeType":"88","endLine":20,"endColumn":8,"suggestions":"97"},{"ruleId":"86","severity":1,"message":"98","line":17,"column":6,"nodeType":"88","endLine":17,"endColumn":15,"suggestions":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateChar'. Either include it or remove the dependency array.","ArrayExpression",["102"],"React Hook useEffect has missing dependencies: 'offset' and 'onRequest'. Either include them or remove the dependency array.",["103"],["104"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["105"],"React Hook useEffect has a missing dependency: 'updateComic'. Either include it or remove the dependency array.",["106"],"no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"109","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [updateChar]",{"range":"116","text":"117"},"Update the dependencies array to be: [offset, onRequest]",{"range":"118","text":"119"},"Update the dependencies array to be: [props.charId, updateChar]",{"range":"120","text":"121"},{"range":"122","text":"119"},"Update the dependencies array to be: [comicId, updateComic]",{"range":"123","text":"124"},[476,478],"[updateChar]",[612,614],"[offset, onRequest]",[464,478],"[props.charId, updateChar]",[635,637],[516,525],"[comicId, updateComic]"]